{"version":3,"sources":["app.tsx","index.tsx"],"names":["url","network","StacksTestnet","coreApiUrl","App","client","useMemo","RxStacks","createTransaction","useCallback","makeSTXTokenTransfer","recipient","senderKey","amount","BN","Math","random","initiateTxSend$","Subject","sendTxStream$","useObservable","pipe","concatMap","tx","from","broadcastTransaction","tap","toast","success","switchMap","newTx","mempoolTxs$","filter","tx_id","take","useSubscription","console","log","className","position","height","mode","onClick","next","ReactDOM","render","document","getElementById"],"mappings":"4cAgBA,IAAMA,EAAM,4CACNC,EAAU,IAAIC,IACpBD,EAAQE,WAAaH,EAErB,IA+CeI,EA/CH,WACV,IATmBJ,EASbK,GATaL,EASQA,EARpBM,mBAAQ,kBAAM,IAAIC,WAAS,CAAEP,UAAQ,CAACA,KAUvCQ,EAAoBC,uBACxB,kBACEC,YAAqB,CACnBC,UAAW,4CACXC,UAAW,qEACXC,OAAQ,IAAIC,IAAGC,KAAKC,SAAW,GAC/Bf,cAEJ,IAGIgB,EAAkBX,mBAAQ,kBAAM,IAAIY,MAAiB,IAErDC,EAAgBC,aAAc,kBAClCH,EAAgBI,KACdC,aAAU,kBAAMd,OAChBc,aAAU,SAAAC,GAAE,OAAIC,YAAKC,YAAqBF,EAAItB,OAC9CyB,aAAI,WACFC,IAAMC,QAAQ,yCAEhBC,aAAU,SAAAC,GAAK,OACbzB,EAAO0B,YAAYV,KACjBW,aAAO,SAAAT,GAAE,OAAIA,EAAGU,QAAU,KAAOH,KACjCI,YAAK,GACLR,aAAI,kBAAMC,IAAMC,QAAN,kCAAyCE,eAQ3D,OAFAK,YAAgBhB,GAAe,SAAAI,GAAE,OAAIa,QAAQC,IAAI,cAAed,MAG9D,sBAAKe,UAAU,MAAf,UACE,cAAC,IAAD,CAASC,SAAS,cAClB,cAAC,IAAD,UACE,cAAC,IAAD,CAAQC,OAAO,OAAOC,KAAK,UAAUC,QAAS,kBAAMzB,EAAgB0B,QAApE,yCCtDRC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.1f6ea6f5.chunk.js","sourcesContent":["import { useCallback, useMemo } from 'react';\nimport BN from 'bn.js';\nimport { from, Subject } from 'rxjs';\nimport { concatMap, tap, take, switchMap, filter } from 'rxjs/operators';\nimport { useObservable, useSubscription } from 'observable-hooks';\nimport { Toaster, toast } from 'react-hot-toast';\nimport { StacksTestnet } from '@stacks/network';\nimport { RxStacks } from '@stacks/rx';\nimport { broadcastTransaction, makeSTXTokenTransfer } from '@stacks/transactions';\nimport { Button, Box } from '@stacks/ui';\nimport './app.css';\n\nfunction useRxStacks(url: string) {\n  return useMemo(() => new RxStacks({ url }), [url]);\n}\n\nconst url = 'https://stacks-node-api.regtest.stacks.co';\nconst network = new StacksTestnet();\nnetwork.coreApiUrl = url;\n\nconst App = () => {\n  const client = useRxStacks(url);\n\n  const createTransaction = useCallback(\n    () =>\n      makeSTXTokenTransfer({\n        recipient: 'ST3TVPR20C8NP97NNYEGC2D2TE0TYD908TS9D0V5N',\n        senderKey: 'b68d555107666dc9ca2638e633920e8c2426efb67419fb74407135beb805398c01',\n        amount: new BN(Math.random() + 1),\n        network,\n      }),\n    []\n  );\n\n  const initiateTxSend$ = useMemo(() => new Subject<void>(), []);\n\n  const sendTxStream$ = useObservable(() =>\n    initiateTxSend$.pipe(\n      concatMap(() => createTransaction()),\n      concatMap(tx => from(broadcastTransaction(tx, network))),\n      tap(() => {\n        toast.success('Transaction successfully broadcast');\n      }),\n      switchMap(newTx =>\n        client.mempoolTxs$.pipe(\n          filter(tx => tx.tx_id === '0x' + newTx),\n          take(1),\n          tap(() => toast.success(`New mempool tx, Txid: 0x${newTx}`))\n        )\n      )\n    )\n  );\n\n  useSubscription(sendTxStream$, tx => console.log('transaction', tx));\n\n  return (\n    <div className=\"app\">\n      <Toaster position=\"top-right\" />\n      <Box>\n        <Button height=\"40px\" mode=\"primary\" onClick={() => initiateTxSend$.next()}>\n          Broadcast Transaction\n        </Button>\n      </Box>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\n\nReactDOM.render(<App />, document.getElementById('app'));\n"],"sourceRoot":""}